data(mtcars)
help(mtcars)
levels(as.factor(mtcars$am))
summary(lm(mpg ~ am.f + I(wt - mean(wt)) + am.f * I(wt - mean(wt)), data = mtcars))
mtcars$am.f <- as.factor(mtcars$am); levels(mtcars$am.f) <- c("Automatic", "Manual")
summary(lm(mpg ~ am.f + I(wt - mean(wt)) + am.f * I(wt - mean(wt)), data = mtcars))
plotting.model <- lm(mpg ~ am.f + wt + am.f * wt, data = mtcars)
gp <- ggplot(data=mtcars, aes(x=wt, y=mpg, colour=am.f)) +
geom_point(alpha = 0.7) +
geom_abline(intercept = coef(plotting.model)[1], slope = coef(plotting.model)[3],
size = 1, color = "#B21212") +
geom_abline(intercept = coef(plotting.model)[1] + coef(plotting.model)[2],
slope = coef(plotting.model)[3] + coef(plotting.model)[4],
size = 1, color = "#0971B2") +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2")) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
library(ggplot)
plotting.model <- lm(mpg ~ am.f + wt + am.f * wt, data = mtcars)
gp <- ggplot(data=mtcars, aes(x=wt, y=mpg, colour=am.f)) +
geom_point(alpha = 0.7) +
geom_abline(intercept = coef(plotting.model)[1], slope = coef(plotting.model)[3],
size = 1, color = "#B21212") +
geom_abline(intercept = coef(plotting.model)[1] + coef(plotting.model)[2],
slope = coef(plotting.model)[3] + coef(plotting.model)[4],
size = 1, color = "#0971B2") +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2")) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
library(ggplot2)
plotting.model <- lm(mpg ~ am.f + wt + am.f * wt, data = mtcars)
gp <- ggplot(data=mtcars, aes(x=wt, y=mpg, colour=am.f)) +
geom_point(alpha = 0.7) +
geom_abline(intercept = coef(plotting.model)[1], slope = coef(plotting.model)[3],
size = 1, color = "#B21212") +
geom_abline(intercept = coef(plotting.model)[1] + coef(plotting.model)[2],
slope = coef(plotting.model)[3] + coef(plotting.model)[4],
size = 1, color = "#0971B2") +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2")) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
summary(plotting.model)$coef
summary(plotting.model)$coef[1,1]
mtcars$centred.wt <- wt - mean(wt)
library(ggplot2)
gp <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
mtcars$centred.wt <- mtcars$wt - mean(mtcars$wt)
gp <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
gp <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#B21212") +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
gp <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
gp
final.model <- lm(mpg ~ am.f + I(wt - mean(wt)) + am.f * I(wt - mean(wt)), data = mtcars)
summary(final.model)$coef
gp <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 19.24) +
geom_vline(xintercept = 0) +
theme_bw()
gp
sum(is.na(mtcars$wt))
sum(is.na(mtcars$mpg))
sum(is.na(mtcars$centred.wt))
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
ylim(20, 45) +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 31.42) +
geom_vline(xintercept = 0) +
theme_bw()
g1
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point()
g1
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point() +
ylab("Miles per gallon") +
ylim(20, 45) +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 31.42) +
geom_vline(xintercept = 0) +
theme_bw()
g1
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2")
g1
library(ggplot2); library(gridExtra)
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 31.42) +
geom_vline(xintercept = 0) +
theme_bw()
mtcars$centred.wt <- mtcars$wt - mean(mtcars$wt)
g2 <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 19.24) +
geom_vline(xintercept = 0) +
theme_bw()
grid.arrange(g1, g2, nrow = 1, ncol = 2)
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
geom_smooth(method = 'lm', formula = mpg ~ wt + am.f + wt * am.f) +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_vline(xintercept = 0) +
theme_bw()
g1
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
geom_smooth(method = 'lm', formula = mpg ~ wt + am.f + wt * am.f, data = mtcars) +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_vline(xintercept = 0) +
theme_bw()
g1
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
geom_smooth(method = 'lm',
formula = mtcars$mpg ~ mtcars$wt + mtcars$am.f + mtcars$wt * mtcars$am.f) +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_vline(xintercept = 0) +
theme_bw()
g1
g1 <- ggplot(data=mtcars, aes(x=wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 31.42) +
geom_vline(xintercept = 0) +
theme_bw()
mtcars$centred.wt <- mtcars$wt - mean(mtcars$wt)
g2 <- ggplot(data=mtcars, aes(x=centred.wt, y=mpg)) +
geom_point(alpha = 0.7, colour = "#0971B2") +
ylab("Miles per gallon") +
ylim(10, 35) +
xlab("Weight (`000 lbs)") +
geom_hline(yintercept = 19.24) +
geom_vline(xintercept = 0) +
theme_bw()
grid.arrange(g1, g2, nrow = 1, ncol = 2)
19.24 - 3.79 * -1.22
17.07 - 9.09 * -1.22
summary(mtcars$wt)
head(mtcars$wt[mtcars$wt > 2.6])
colnames(mtcars)
mtcars[mtcars$wt == 2.620]
View(mtcars)
mtcars[subset %in% mtcars$wt == 2.620]
mtcars[mtcars$wt == 2.620 ,]
View(mtcars)
View(mtcars)
head(mtcars$wt[mtcars$am.f == "Automatic", ])
head(mtcars$wt[mtcars$am.f == "Automatic"])
mtcars[mtcars$wt == 3.215 ,]
mean(mtcars$wt)
mtcars[mtcars$wt == 3.570 ,]
centred.mazda = 2.620 - mean(mtcars$wt)
centred.duster = 3.570 - mean(mtcars$wt)
pred.cars <- data.frame(wt = c(centred.mazda, centred.duster))
View(pred.cars)
manual.ci <- predict(centred.model.manual, newdata = pred.cars[1,], interval = ("confidence"))
centred.model.auto <- lm(mpg ~ I(wt - mn), data = mtcars[mtcars$am == 0, ])
centred.model.manual <- lm(mpg ~ I(wt - mn), data = mtcars[mtcars$am == 1, ])
centred.model.auto <- lm(mpg ~ I(wt - mean(mtcars$wt)), data = mtcars[mtcars$am == 0, ])
centred.model.manual <- lm(mpg ~ I(wt - mean(mtcars$wt)), data = mtcars[mtcars$am == 1, ])
manual.ci <- predict(centred.model.manual, newdata = pred.cars[1,], interval = ("confidence"))
manual.ci <- predict(centred.model.manual, newdata = pred.cars, interval = ("confidence"))
View(manual.ci)
pred.cars <- data.frame(wt = c(2.620, 3.570))
manual.ci <- predict(centred.model.manual, newdata = pred.cars, interval = ("confidence"))
View(manual.ci)
manual.ci <- predict(centred.model.manual, newdata = pred.cars[1], interval = ("confidence"))
View(manual.ci)
manual.ci <- predict(centred.model.manual, newdata = pred.cars[1,], interval = ("confidence"))
manual.ci <- predict(centred.model.manual, newdata = pred.cars[pred.cars$wt[1,]], interval = ("confidence"))
mtcars[1,]
manual.ci <- predict(centred.model.manual, newdata = pred.cars[1,], interval = ("confidence"))
manual.car <- data.frame(wt = 2.620)
auto.car <- data.frame(wt = 3.570)
manual.ci <- predict(centred.model.manual, newdata = manual.car, interval = ("confidence"))
auto.ci <- predict(centred.model.auto, newdata = auto.car, interval = ("confidence"))
View(auto.car)
View(auto.ci)
View(auto.car)
mtcars$mpg[mtcars$2.620]
mtcars$mpg[mtcars$wt == 2.620]
View(manual.ci)
mtcars$mpg[mtcars == "Mazda RX4"]
mtcars$mpg[rowname(mtcars) == "Mazda RX4"]
mtcars$mpg[row.names(mtcars) == "Mazda RX4"]
help(predict)
mtcars$mpg[row.names(mtcars) == "Duster 360"]
View(auto.ci)
new.cars <- data.frame(wt = 2)
# Prediction interval for new values
auto.predict.ci <- predict(centred.model.auto, newdata = new.cars,
interval = ("prediction"), level = 0.95)
manual.predict.ci <- predict(centred.model.manual, newdata = new.cars,
interval = ("prediction"), level = 0.95)
View(manual.predict.ci)
library("knitr")
setwd("/Users/jburchell/projects/t-redactyl/content")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-10-28-interpreting-linear-regression-coefficients.Rmd", output = "2015-10-28-interpreting-linear-regression-coefficients.md")
