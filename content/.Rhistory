sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
names(lmfits) <- c("Model1", "Model2", "Change")
lmfits$Model1 <- as.character(lmfits$Model1)
lmfits$Model2 <- as.character(lmfits$Model2)
lmfits$Change <- as.numeric(as.character(lmfits$Change))
lmfits <- lmfit.table(model2, model3)
lmfits <- lmfit.table(model3, model4)
lmfits <- lmfit.table(model3, model5)
lmfits <- lmfit.table(model3, model6)
lmfits <- lmfit.table(model3, model7)
lmfits <- lmfit.table(model3, model8)
lmfits <- lmfit.table(model8, model9)
lmfits <- lmfit.table(model8, model9)
View(lmfits)
View(lmfits)
lmfits <- lmfit.table(model1, model2)
names(lmfits) <- c("Model1", "Model2", "Change")
lmfits$Model1 <- as.character(lmfits$Model1)
lmfits$Model2 <- as.character(lmfits$Model2)
lmfits$Change <- as.numeric(as.character(lmfits$Change))
lmfits <- lmfit.table(model2, model3)
lmfits <- lmfit.table(model3, model4)
lmfits <- lmfit.table(model3, model5)
lmfits <- lmfit.table(model3, model6)
lmfits <- lmfit.table(model3, model7)
lmfits <- lmfit.table(model3, model8)
lmfits <- lmfit.table(model8, model9)
lmfits <- lmfit.table(model2, model10)
View(lmfits)
lmfits <- data.frame(Model1 = character(), Model2 = character(), Change = numeric())
lmfit.table <- function(model1, model2, ...) {
models <- sub("Model 1: ", "", attr(anova(model1, model2), "heading")[2])
x <- c(sub("\\n.*", "", models),
sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
names(lmfits) <- c("Model1", "Model2", "Change")
lmfits$Model1 <- as.character(lmfits$Model1)
lmfits$Model2 <- as.character(lmfits$Model2)
lmfits$Change <- as.numeric(as.character(lmfits$Change))
lmfits <- lmfit.table(model2, model3)
lmfits <- lmfit.table(model3, model4)
lmfits <- lmfit.table(model3, model5)
lmfits <- lmfit.table(model3, model6)
lmfits <- lmfit.table(model3, model7)
lmfits <- lmfit.table(model3, model8)
lmfits <- lmfit.table(model8, model9)
lmfits <- lmfit.table(model2, model10)
View(lmfits)
lmfits <- data.frame(Model1 = character(), Model2 = character(), Change = numeric())
lmfit.table <- function(model1, model2, ...) {
models <- sub("Model 1: ", "", attr(anova(model1, model2), "heading")[2])
x <- c(sub("\\n.*", "", models),
sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
lmfits$Model1 <- as.character(lmfits$Model1)
lmfits$Model2 <- as.character(lmfits$Model2)
lmfits$Change <- as.numeric(as.character(lmfits$Change))
colnames(lmfits)
View(lmfits)
lmfits <- data.frame(Model1 = character(), Model2 = character(), Change = numeric())
lmfit.table <- function(model1, model2, ...) {
models <- sub("Model 1: ", "", attr(anova(model1, model2), "heading")[2])
x <- c(sub("\\n.*", "", models),
sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
lmfits$X.mpg...am.f. <- as.character(lmfits$X.mpg...am.f.)
lmfits$X.mpg...am.f...wt. <- as.character(lmfits$X.mpg...am.f...wt.)
lmfits$X.0. <- as.numeric(as.character(lmfits$X.0.))
lmfits <- lmfit.table(model2, model3)
lmfits <- lmfit.table(model3, model4)
lmfits <- lmfit.table(model3, model5)
lmfits <- lmfit.table(model3, model6)
lmfits <- lmfit.table(model3, model7)
lmfits <- lmfit.table(model3, model8)
lmfits <- lmfit.table(model8, model9)
lmfits <- lmfit.table(model2, model10)
View(lmfits)
names(lmfits) <- c("Model 1", "Model 2", "p-value of model improvement")
View(lmfits)
summary(model10); summary(model8)
summary(model10); summary(model8)
vif(model10); vif(model8)
summary(model10); vif(model10)
summary(model8); vif(model8)
summary(model10); vif(model10)
summary(model8); vif(model8)
str(summary(model10))
round(summary(model10)$r.squared, 3)
round(summary(model8)$r.squared, 3)
cor(mtcars$wt, mtcars$cyl)
View(lmfits)
115 * 1.5
plot(final.model)
head(sort(round(hatvalues(final.model), 3), decreasing = TRUE))
head(sort(round(abs(dfbetas(final.model)[, 2]), 3), decreasing = TRUE))
g1 <- gp + geom_text(data=subset(mtcars, abs(hatvalues) > 0.26),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Leverage (hatvalues)")
g1
g1 <- gp + geom_text(data=subset(mtcars, abs(hatvalues) > 0.17),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Leverage (hatvalues)")
g1
g2 <- gp + geom_text(data=subset(mtcars, abs(dfbetas) > 0.21),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Influence (dfbetas)")
g2
sort(round(hatvalues(final.model), 3), decreasing = TRUE)
g1 <- gp + geom_text(data=subset(mtcars, abs(hatvalues) > 0.21),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Leverage (hatvalues)")
g1
g1 <- gp + geom_text(data=subset(mtcars, abs(hatvalues) > 0.17),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Leverage (hatvalues)")
g1
g1 <- gp + geom_text(data=subset(mtcars, abs(hatvalues) > 0.21),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Leverage (hatvalues)")
g1
g2 <- gp + geom_text(data=subset(mtcars, abs(dfbetas) > 0.17),
aes(wt,mpg,label=name), size = 4, hjust=1, vjust=0) +
ggtitle("Three Points with Highest Influence (dfbetas)")
g2
tapply(mtcars$wt, mtcars$am.f, summary)
r(min(mtcars$wt[mtcars$am] == 0)
)
min(mtcars$wt[mtcars$am] == 0)
min(mtcars$wt[mtcars$am == 0])
summary(final.model)
sumCoef <- summary(final.model)$coefficients
sumCoef[1, 1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[1, 1] + c(-1, 1) * qt(.975, df = final.model$df) * sumCoef[1, 2]
sumCoef
b3 <- sumCoef[2, 1] + c(-1, 1) * qt(.975, df = final.model$df) * sumCoef[3, 2]
b2 <- sumCoef[2, 1] + c(-1, 1) * qt(.975, df = final.model$df) * sumCoef[3, 2]
intercept + b2
intercept.ci <- sumCoef[1, 1] + c(-1, 1) * qt(.975, df = final.model$df) * sumCoef[1, 2]
b2.ci <- sumCoef[2, 1] + c(-1, 1) * qt(.975, df = final.model$df) * sumCoef[3, 2]
intercept.ci + b2.ci
g1 <- ggplot(data=mtcars$mpg, aes(mtcars$mpg)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5,
col = "#086199",
fill = "#0971B2") +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = 220, sd = sd(mn_vector))) +
scale_colour_manual(name = "Density", values = c("#B21212", "black"))
class(mtcars$mpg)
g1 <- ggplot(data=as.data.frame(mtcars$mpg), aes(mtcars$mpg)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5,
col = "#086199",
fill = "#0971B2") +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = 220, sd = sd(mn_vector))) +
scale_colour_manual(name = "Density", values = c("#B21212", "black"))
g1 <- ggplot(data=as.data.frame(mtcars$mpg), aes(mtcars$mpg)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5,
col = "#086199",
fill = "#0971B2") +
xlab("Mean of each sample") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of Means of 1,000 Samples") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = mean(mtcars$mpg), sd = sd(mtcars$mpg))) +
scale_colour_manual(name = "Density", values = c("#B21212", "black"))
g1
g1 <- ggplot(data=as.data.frame(mtcars$mpg), aes(mtcars$mpg)) +
geom_histogram(aes(y = ..density..), binwidth = 2,
col = "#086199",
fill = "#0971B2") +
xlab("Miles per gallon") +
ylab("Density") +
theme_bw() +
ggtitle("Distribution of MPG") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
geom_line(aes(y = ..density.., colour = "Empirical"), stat = "density") +
stat_function(fun = dnorm, aes(colour = "Normal"),
arg = list(mean = mean(mtcars$mpg), sd = sd(mtcars$mpg))) +
scale_colour_manual(name = "Density", values = c("#B21212", "black"))
g1
final.model.auto <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$af == 0])
final.model.auto <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 0])
final.model.auto <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 0, ])
final.model.auto
summary(final.model.auto)
final.model.auto <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 1, ])
final.model.auto <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 0, ])
final.model.manual <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 1, ])
summary(final.model.manual)
mean.cars <- data.frame(wt = c(mean(mtcars$wt)))
View(mean.cars)
final.model.auto <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 0, ])
final.model.manual <- lm(mpg ~ I(wt - mean(wt)), data = mtcars[mtcars$am == 1, ])
mean.cars <- data.frame(wt = c(mean(mtcars$wt)))
new.cars <- data.frame(wt = c(2, 4))
predict(final.model.auto, newdata = mean.cars, interval = ("confidence"))
predict(final.model.manual, newdata = mean.cars, interval = ("confidence"))
predict(final.model.auto, newdata = new.cars, interval = ("prediction"))
predict(final.model.manual, newdata = new.cars, interval = ("prediction"))
summary(final.model.manual)
mn <- mean(mtcars$wt)
final.model.auto <- lm(mpg ~ I(wt - mn), data = mtcars[mtcars$am == 0, ])
final.model.manual <- lm(mpg ~ I(wt - mn), data = mtcars[mtcars$am == 1, ])
summary(final.model.auto)
summary(final.model.manual)
mean.cars <- data.frame(wt = c(mean(mtcars$wt)))
new.cars <- data.frame(wt = c(2, 4))
predict(final.model.auto, newdata = mean.cars, interval = ("confidence"))
predict(final.model.manual, newdata = mean.cars, interval = ("confidence"))
auto.ci <- predict(final.model.auto, newdata = mean.cars, interval = ("confidence"))
class(auto.ci)
auto.ci[1]
round(auto.ci[2], 2)
round(auto.ci[2], 3)
round(auto.ci[3], 2
)
auto.predict.ci
auto.predict.ci <- predict(final.model.auto, newdata = new.cars, interval = ("prediction"))
manual.predict.ci <- predict(final.model.manual, newdata = new.cars, interval = ("prediction"))
auto.predict.ci
auto.predict.ci[2,1]
auto.predict.ci[1,2]
summary(final.model)
model1
vif(model8)
vif(model8)[ ,1]
vif(model10)
vif(model8)[ ,1]
vif(model10); vif(model8)[ ,1]
g <- ggplot(mtcars, aes(am.f, mpg)) +
geom_boxplot(aes(fill = am.f)) +
geom_jitter() +
ylab("Miles per gallon") +
xlab("\nTransmission type") +
theme_bw() +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2")) +
g
g <- ggplot(mtcars, aes(am.f, mpg)) +
geom_boxplot(aes(fill = am.f)) +
geom_jitter() +
ylab("Miles per gallon") +
xlab("\nTransmission type") +
theme_bw() +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2"))
g
g <- ggplot(mtcars, aes(am.f, mpg, fill = am.f)) +
geom_boxplot(aes(fill = am.f), color) +
geom_jitter() +
ylab("Miles per gallon") +
xlab("\nTransmission type") +
theme_bw() +
scale_fill_manual(name="Transmission",  values =c("#B21212", "#0971B2"))
g
g <- ggplot(mtcars, aes(am.f, mpg, fill = am.f)) +
geom_boxplot(aes(fill = am.f)) +
geom_jitter() +
ylab("Miles per gallon") +
xlab("\nTransmission type") +
theme_bw() +
scale_fill_manual(name="Transmission",  values =c("#B21212", "#0971B2"))
g
rm(list = ls())
data(mtcars)
mtcars$am.f <- as.factor(mtcars$am); levels(mtcars$am.f) <- c("Automatic", "Manual")
mtcars$cyl.f <- as.factor(mtcars$cyl); levels(mtcars$cyl.f) <- c("4 cyl", "6 cyl", "8 cyl")
mtcars$vs.f <- as.factor(mtcars$vs); levels(mtcars$vs.f) <- c("V engine", "Straight engine")
mtcars$gear.f <- as.factor(mtcars$gear); levels(mtcars$gear.f) <- c("3 gears", "4 gears", "5 gears")
mtcars$carb.f <- as.factor(mtcars$carb)
library(ggplot2); library(GGally)
mtcars <- mtcars[ , c(1, 9, 2:8, 10:11)]
colnames(mtcars)
g = ggpairs(mtcars[ , 1:11], lower = list(continuous = "smooth", params = c(method = "loess")))
g
rm(list = ls())
rm(list = ls())
data(mtcars)
mtcars$am.f <- as.factor(mtcars$am); levels(mtcars$am.f) <- c("Automatic", "Manual")
mtcars$cyl.f <- as.factor(mtcars$cyl); levels(mtcars$cyl.f) <- c("4 cyl", "6 cyl", "8 cyl")
mtcars$vs.f <- as.factor(mtcars$vs); levels(mtcars$vs.f) <- c("V engine", "Straight engine")
mtcars$gear.f <- as.factor(mtcars$gear); levels(mtcars$gear.f) <- c("3 gears", "4 gears", "5 gears")
mtcars$carb.f <- as.factor(mtcars$carb)
View(mtcars)
library(ggplot2); library(GGally)
mtcars <- mtcars[ , c(1, 9, 2:8, 10:11)]
g = ggpairs(mtcars[ , 1:11], lower = list(continuous = "smooth", params = c(method = "loess")))
g
View(mtcars)
rm(list = ls())
data(mtcars)
mtcars$am.f <- as.factor(mtcars$am); levels(mtcars$am.f) <- c("Automatic", "Manual")
mtcars$cyl.f <- as.factor(mtcars$cyl); levels(mtcars$cyl.f) <- c("4 cyl", "6 cyl", "8 cyl")
mtcars$vs.f <- as.factor(mtcars$vs); levels(mtcars$vs.f) <- c("V engine", "Straight engine")
mtcars$gear.f <- as.factor(mtcars$gear); levels(mtcars$gear.f) <- c("3 gears", "4 gears", "5 gears")
mtcars$carb.f <- as.factor(mtcars$carb)
View(mtcars)
colnames(mtcars)[16]
rm(list = ls())
data(mtcars)
mtcars$am.f <- as.factor(mtcars$am); levels(mtcars$am.f) <- c("Automatic", "Manual")
mtcars$cyl.f <- as.factor(mtcars$cyl); levels(mtcars$cyl.f) <- c("4 cyl", "6 cyl", "8 cyl")
mtcars$vs.f <- as.factor(mtcars$vs); levels(mtcars$vs.f) <- c("V engine", "Straight engine")
mtcars$gear.f <- as.factor(mtcars$gear); levels(mtcars$gear.f) <- c("3 gears", "4 gears", "5 gears")
mtcars$carb.f <- as.factor(mtcars$carb)
spec.cor <- function (dat, r, ...) {
x <- cor(dat, ...)
x[upper.tri(x, TRUE)] <- NA
i <- which(abs(x) >= r, arr.ind = TRUE)
data.frame(matrix(colnames(x)[as.vector(i)], ncol = 2), value = x[i])
}
spec.cor(mtcars[ , 2:11], 0.8)
cor.list <- c()
outcome.cor <- function(predictor, ...) {
x <- cor(mtcars$mpg, predictor)
cor.list <- c(cor.list, x)
}
cor.list <- sapply(mtcars[ , c(3, 6:8, 10:11)], outcome.cor)
sort(abs(cor.list), decreasing = TRUE)
cor.list <- c()
outcome.cor <- function(predictor, ...) {
x <- cor(mtcars$mpg, predictor)
cor.list <- c(cor.list, x)
}
cor.list <- sapply(mtcars[ , c(3, 6:8, 10:11)], outcome.cor)
sort(abs(cor.list), decreasing = TRUE)
cor.list <- sapply(mtcars[ , c(3, 6:8, 10:11)], outcome.cor(mpg))
colnames(mtcars)
rm(list = ls())
data(mtcars)
mtcars$am.f <- as.factor(mtcars$am); levels(mtcars$am.f) <- c("Automatic", "Manual")
mtcars$cyl.f <- as.factor(mtcars$cyl); levels(mtcars$cyl.f) <- c("4 cyl", "6 cyl", "8 cyl")
mtcars$vs.f <- as.factor(mtcars$vs); levels(mtcars$vs.f) <- c("V engine", "Straight engine")
mtcars$gear.f <- as.factor(mtcars$gear); levels(mtcars$gear.f) <- c("3 gears", "4 gears", "5 gears")
mtcars$carb.f <- as.factor(mtcars$carb)
mtcars <- mtcars[ , c(1, 9, 2:8, 10:16)]
spec.cor <- function (dat, r, ...) {
x <- cor(dat, ...)
x[upper.tri(x, TRUE)] <- NA
i <- which(abs(x) >= r, arr.ind = TRUE)
data.frame(matrix(colnames(x)[as.vector(i)], ncol = 2), value = x[i])
}
spec.cor(mtcars[ , 2:11], 0.8)
cor.list <- c()
outcome.cor <- function(predictor, ...) {
x <- cor(mtcars$mpg, predictor)
cor.list <- c(cor.list, x)
}
cor.list <- sapply(mtcars[ , c(3, 6:8, 10:11)], outcome.cor)
sort(abs(cor.list), decreasing = TRUE)
help(anova)
model1 <- lm(mpg ~ am.f, data = mtcars)
model2 <- lm(mpg ~ am.f + wt, data = mtcars)
model3 <- lm(mpg ~ am.f + wt + cyl.f, data = mtcars)
model4 <- lm(mpg ~ am.f + wt + cyl.f + drat, data = mtcars)
model5 <- lm(mpg ~ am.f + wt + cyl.f + carb.f, data = mtcars)
model6 <- lm(mpg ~ am.f + wt + cyl.f + gear.f, data = mtcars)
model7 <- lm(mpg ~ am.f + wt + cyl.f + qsec, data = mtcars)
model8 <- lm(mpg ~ am.f + wt + cyl.f + am.f * wt, data = mtcars)
model9 <- lm(mpg ~ am.f + wt + cyl.f + am.f * wt + am.f * cyl.f, data = mtcars)
model10 <- lm(mpg ~ am.f + wt + am.f * wt, data = mtcars)
anova(model1, model2)
lmfits <- data.frame(Model1 = character(), Model2 = character(), Change = numeric())
lmfit.table <- function(model1, model2, ...) {
models <- sub("Model 1: ", "", attr(anova(model1, model2), "heading")[2])
x <- c(sub("\\n.*", "", models),
sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
View(lmfits)
lmfits[ ,1] <- as.character(lmfits[ ,1])
View(lmfits)
lmfits <- lmfit.table(model1, model2)
lmfits[ ,1] <- as.character(lmfits[ ,1])
lmfits[ ,2] <- as.character(lmfits[ ,2])
lmfits[ ,3] <- as.numeric(lmfits[ ,3])
names(lmfits) <- c("Model 1", "Model 2", "p-value of model improvement")
View(lmfits)
lmfits <- lmfit.table(model2, model3)
View(lmfits)
lmfits <- data.frame(Model1 = character(), Model2 = character(), Change = numeric())
lmfits <- lmfit.table(model1, model2)
lmfits[ ,1] <- as.character(lmfits[ ,1])
lmfits[ ,2] <- as.character(lmfits[ ,2])
lmfits[ ,3] <- as.character(lmfits[ ,3])
names(lmfits) <- c("Model 1", "Model 2", "p-value of model improvement")
View(lmfits)
lmfits <- lmfit.table(model2, model3)
View(lmfits)
lmfits <- data.frame(Model1 = character(), Model2 = character(), Change = numeric())
lmfit.table <- function(model1, model2, ...) {
models <- sub("Model 1: ", "", attr(anova(model1, model2), "heading")[2])
x <- c(sub("\\n.*", "", models),
sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
for (i in 1:3) {
lmfits[ , i] <- as.character(lmfits[ , i])
}
View(lmfits)
names(lmfits) <- c("Model 1", "Model 2", "p-value of model improvement")
lmfits <- lmfit.table(model2, model3)
View(lmfits)
lmfits <- data.frame()
lmfit.table <- function(model1, model2, ...) {
models <- sub("Model 1: ", "", attr(anova(model1, model2), "heading")[2])
x <- c(sub("\\n.*", "", models),
sub(".*Model 2: ", "", models),
round(anova(model1, model2)$"Pr(>F)"[2], 3))
lmfits <- rbind(lmfits, x)
}
lmfits <- lmfit.table(model1, model2)
for (i in 1:3) {
lmfits[ , i] <- as.character(lmfits[ , i])
}
names(lmfits) <- c("Model 1", "Model 2", "p-value of model improvement")
lmfits <- lmfit.table(model2, model3)
View(lmfits)
lmfits
print("R-squared for model10")
gp <- ggplot(data=mtcars, aes(x=wt, y=mpg, colour=am.f)) +
geom_point(alpha = 0.7) +
geom_abline(intercept = coef(final.model)[1], slope = coef(final.model)[3],
size = 1, color = "#B21212") +
geom_abline(intercept = coef(final.model)[1] + coef(final.model)[2],
slope = coef(final.model)[3] + coef(final.model)[4],
size = 1, color = "#0971B2") +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2")) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
final.model <- lm(mpg ~ am.f + wt + am.f * wt, data = mtcars)
mtcars$name <- row.names(mtcars)
mtcars$hatvalues <- round(hatvalues(final.model), 3)
top.leverage = sort(round(hatvalues(final.model), 3), decreasing = TRUE)
head(top.leverage)
mtcars$dfbetas <- round(dfbetas(final.model)[, 2], 3)
top.influence = sort(round(abs(dfbetas(final.model)[, 2]), 3), decreasing = TRUE)
head(top.influence)
library(ggplot2)
gp <- ggplot(data=mtcars, aes(x=wt, y=mpg, colour=am.f)) +
geom_point(alpha = 0.7) +
geom_abline(intercept = coef(final.model)[1], slope = coef(final.model)[3],
size = 1, color = "#B21212") +
geom_abline(intercept = coef(final.model)[1] + coef(final.model)[2],
slope = coef(final.model)[3] + coef(final.model)[4],
size = 1, color = "#0971B2") +
scale_colour_manual(name="Transmission",  values =c("#B21212", "#0971B2")) +
ylab("Miles per gallon") +
xlab("Weight (`000 lbs)") +
theme_bw()
g2 <- gp + geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[1]),
aes(wt,mpg,label=name), size = 4, hjust = 1, vjust = 0) +
gp + geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[2:3],
aes(wt,mpg,label=name), size = 4, hjust = 0, vjust = 0) +
ggtitle("Three Points with Highest Influence (dfbetas)")
g2 <- gp + geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[1]),
aes(wt,mpg,label=name), size = 4, hjust = 1, vjust = 0) +
gp + geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[2:3]),
aes(wt,mpg,label=name), size = 4, hjust = 0, vjust = 0) +
ggtitle("Three Points with Highest Influence (dfbetas)")
g
gp
g2 <- gp + geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[1]),
aes(wt,mpg,label=name), size = 4, hjust = 1, vjust = 0) +
geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[2:3]),
aes(wt,mpg,label=name), size = 4, hjust = 0, vjust = 0) +
ggtitle("Three Points with Highest Influence (dfbetas)")
g2
g2 <- gp + geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[1]),
aes(wt,mpg,label=name), size = 4, hjust = 1, vjust = 0) +
geom_text(data=subset(mtcars, abs(dfbetas) == top.influence[2] | abs(dfbetas) == top.influence[3]),
aes(wt,mpg,label=name), size = 4, hjust = 0, vjust = 0) +
ggtitle("Three Points with Highest Influence (dfbetas)")
g2
setwd("/Users/jburchell/projects/t-redactyl/content")
library(knitr)
knit("/Users/jburchell/Documents/Blog-posts/2015-11-04-linear-regression-tools.Rmd", output = "2015-11-04-linear-regression-tools-in-r.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-11-04-linear-regression-tools.Rmd", output = "2015-11-04-linear-regression-tools-in-r.md")
print(lmfits)
knit("/Users/jburchell/Documents/Blog-posts/2015-11-04-linear-regression-tools.Rmd", output = "2015-11-04-linear-regression-tools-in-r.md")
knit("/Users/jburchell/Documents/Blog-posts/2015-11-04-linear-regression-tools.Rmd", output = "2015-11-04-linear-regression-tools-in-r.md")
